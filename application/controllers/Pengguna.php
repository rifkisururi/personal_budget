<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Pengguna extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Pengguna_model');
        $this->load->model('Universal_model');
    } 

    /*
     * Listing of pengguna
     */
    function index()
    {
        $data['pengguna'] = $this->Pengguna_model->get_all_pengguna();
        
        $data['_view'] = 'pengguna/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new pengguna
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $params = array(
				'password' => $this->input->post('password'),
				'nama' => $this->input->post('nama'),
				'email' => $this->input->post('email'),
				'no_hp' => $this->input->post('no_hp'),
            );
            
            $pengguna_id = $this->Pengguna_model->add_pengguna($params);
            redirect('pengguna/index');
        }
        else
        {            
            $data['_view'] = 'pengguna/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a pengguna
     */
    function edit($id)
    {   
        // check if the pengguna exists before trying to edit it
        $data['pengguna'] = $this->Pengguna_model->get_pengguna($id);
        
        if(isset($data['pengguna']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $params = array(
					'password' => $this->input->post('password'),
					'nama' => $this->input->post('nama'),
					'email' => $this->input->post('email'),
					'no_hp' => $this->input->post('no_hp'),
                );

                $this->Pengguna_model->update_pengguna($id,$params);            
                redirect('pengguna/index');
            }
            else
            {
                $data['_view'] = 'pengguna/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The pengguna you are trying to edit does not exist.');
    } 

    /*
     * Deleting pengguna
     */
    function remove($id)
    {
        $pengguna = $this->Pengguna_model->get_pengguna($id);

        // check if the pengguna exists before trying to delete it
        if(isset($pengguna['id']))
        {
            $this->Pengguna_model->delete_pengguna($id);
            redirect('pengguna/index');
        }
        else
            show_error('The pengguna you are trying to delete does not exist.');
    }


    function login()
    {
        $this->load->view('pengguna/login');
    }

    function login_Action()
    {
        $email = $this->input->post('email');
        $password = $this->input->post('password');

        $where = array(
            'email' => $email,
            'password' => $password//md5($password)
            );

        $cek = $this->Universal_model->cek_data("pengguna",$where)->num_rows();

        if ($cek == 1) {
            // login berhasi

            $query = "select * from pengguna where email = '$email'";
            $nama = $this->Universal_model->getOneValue($query)->nama;
            $id = $this->Universal_model->getOneValue($query)->id;

            $data_session = array(
                'id' => $id,
                'nama' => $nama,
                'status' => "login"
                );
 
            //print_r($data_session);
            $this->session->set_userdata($data_session);
            redirect(base_url(''));
        }
    }

    function logout(){
        $this->session->sess_destroy();
        redirect(base_url(''));
    }
    
}
