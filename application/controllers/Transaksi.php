<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 
class Transaksi extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->model('Transaksi_model');
        $this->load->model('Rekening_model');
    } 

    /*
     * Listing of transaksi
     */
    function index()
    {
        $data['transaksi'] = $this->Transaksi_model->get_all_transaksi();
        
        $data['_view'] = 'transaksi/index';
        $this->load->view('layouts/main',$data);
    }

    /*
     * Adding a new transaksi
     */
    function add()
    {   
        if(isset($_POST) && count($_POST) > 0)     
        {   
            $id_pengguna = $this->session->userdata("id");
            $params = array(
                'id_rekening' => $this->input->post('id_rekening'),
				'id_category' => $this->input->post('id_category'),
				'id_pengguna' => $id_pengguna,
				'tanggal' => $this->input->post('tanggal'),
				'nominal' => $this->input->post('nominal'),
				'keterangan' => $this->input->post('keterangan'),
            );
            
            $transaksi_id = $this->Transaksi_model->add_transaksi($params);
            redirect('transaksi/index');
        }
        else
        {
			$this->load->model('Category_model');
            $data['all_category'] = $this->Category_model->get_all_category();
			$data['all_rekening'] = $this->Rekening_model->get_all_rekening();

            
            $data['_view'] = 'transaksi/add';
            $this->load->view('layouts/main',$data);
        }
    }  

    /*
     * Editing a transaksi
     */
    function edit($id)
    {   
        // check if the transaksi exists before trying to edit it
        $data['transaksi'] = $this->Transaksi_model->get_transaksi($id);
        
        if(isset($data['transaksi']['id']))
        {
            if(isset($_POST) && count($_POST) > 0)     
            {   
                $tanggal = $this->input->post('tanggal');
                if ($tanggal == null || $tanggal == "" || $tanggal == "0000-00-00") {
                    $params = array(
                        'id_rekening' => $this->input->post('id_rekening'),
                        'id_category' => $this->input->post('id_category'),
                        'nominal' => $this->input->post('nominal'),
                        'keterangan' => $this->input->post('keterangan'),
                    );
                }else{
                    $params = array(
                        'id_rekening' => $this->input->post('id_rekening'),
                        'id_category' => $this->input->post('id_category'),
                        'tanggal' => $tanggal,
                        'nominal' => $this->input->post('nominal'),
                        'keterangan' => $this->input->post('keterangan'),
                    );
                }
                 
                
                echo $tanggal;
                $this->Transaksi_model->update_transaksi($id,$params);            
                redirect('transaksi/index');
            }
            else
            {
				$this->load->model('Category_model');
				$data['all_category'] = $this->Category_model->get_all_category();

                $data['_view'] = 'transaksi/edit';
                $this->load->view('layouts/main',$data);
            }
        }
        else
            show_error('The transaksi you are trying to edit does not exist.');
    } 

    /*
     * Deleting transaksi
     */
    function remove($id)
    {
        $transaksi = $this->Transaksi_model->get_transaksi($id);

        // check if the transaksi exists before trying to delete it
        if(isset($transaksi['id']))
        {
            $this->Transaksi_model->delete_transaksi($id);
            redirect('transaksi/index');
        }
        else
            show_error('The transaksi you are trying to delete does not exist.');
    }
    
}
